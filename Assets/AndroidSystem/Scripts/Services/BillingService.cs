//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.34011
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

namespace FourthSky
{
	namespace Android
	{
		namespace Services
		{

			public static class BillingService
			{
				// Service Connection and Binder constants and variables
				private static readonly string billingServiceAction = "com.android.vending.billing.InAppBillingService.BIND";

				private const string ACTION_NOTIFY = "com.android.vending.billing.IN_APP_NOTIFY";
				private const string ACTION_RESPONSE_CODE = "com.android.vending.billing.RESPONSE_CODE";
				private const string ACTION_PURCHASE_STATE_CHANGED = "com.android.vending.billing.PURCHASE_STATE_CHANGED";
				private const string NOTIFICATION_ID = "notification_id";
				private const string INAPP_SIGNED_DATA = "inapp_signed_data";
				private const string INAPP_SIGNATURE = "inapp_signature";
				private const string INAPP_REQUEST_ID = "request_id";
				private const string INAPP_RESPONSE_CODE = "response_code";

				private static ServiceConnection _conn;
				private static IInAppBillingService _service;


				public static bool Initialize() {
					// Connect service
					if (_conn == null) {
						_conn = new ServiceConnection ();
						_conn.OnServiceConnected += (AndroidJavaObject componentName, AndroidJavaObject binder) => {
																			_service = IInAppBillingService.Wrap(binder);
																		};

						_conn.OnServiceDisconnected += (AndroidJavaObject componentName) => { _service.Dispose(); _service = null; };

						return _conn.Bind (billingServiceAction);
					}

					return true;
				}

				public static void Shutdown() {
					// Unbind service
					_conn.Unbind ();
					_conn = null;
				}


				public static bool Supported {
					get {
						return (_service.IsBillingSupported(3, AndroidSystem.PackageName, "inapp") == 0);
					}
				}


				#region billing wrapper

				private class IInAppBillingService : AndroidServiceBinder {
					
					private static readonly int TRANSACTION_isBillingSupported = AndroidServiceBinder.FIRST_CALL_TRANSACTION + 0;
					private static readonly int TRANSACTION_getSkuDetails = AndroidServiceBinder.FIRST_CALL_TRANSACTION + 1;
					private static readonly int TRANSACTION_getPurchases = AndroidServiceBinder.FIRST_CALL_TRANSACTION + 2;
					private static readonly int TRANSACTION_consumePurchase = AndroidServiceBinder.FIRST_CALL_TRANSACTION + 3;
					
					protected IInAppBillingService(AndroidJavaObject binder)
					: base("com.android.vending.billing.IInAppBillingService", binder) {
						
					}
					
					public static IInAppBillingService Wrap(AndroidJavaObject binder) {
						return new IInAppBillingService(binder);
						
					}
					
					public int IsBillingSupported(int apiVersion, string packageName, string type) {
						int _result = 0;
						
						if (UseProxy) {
							AndroidJavaObject _data = CreateParcel();
							AndroidJavaObject _reply = CreateParcel();
							
							try {
								_data.Call("writeInterfaceToken", Descriptor);
								_data.Call("writeInt", apiVersion);
								_data.Call("writeString", packageName);
								_data.Call("writeString", type);
								
								JavaObject.Call<bool>("transact", TRANSACTION_isBillingSupported, _data, _reply, 0);
								_reply.Call("readException");
								
								_result = _reply.Call<int>("readInt");
								
							} finally {
								_data.Call("recycle");
								_reply.Call("recycle");
							}
							
						} else {
							return JavaObject.Call<int>("isBillingSupported", apiVersion, packageName, type);
						}
						
						return _result;
					}
					
					public AndroidJavaObject GetSkuDetails(int apiVersion, string packageName, string type, AndroidJavaObject skusBundle) {
						AndroidJavaObject _result = null;
						
						if (UseProxy) {
							AndroidJavaObject _data = CreateParcel();
							AndroidJavaObject _reply = CreateParcel();
							
							try {
								_data.Call("writeInterfaceToken", Descriptor);
								_data.Call("writeInt", apiVersion);
								_data.Call("writeString", packageName);
								_data.Call("writeString", type);
								if (skusBundle != null) {
									_data.Call("writeInt", 1);
									skusBundle.Call("writeToParcel", _data, 0);
								} else {
									_data.Call("writeInt", 0);
								}
								
								JavaObject.Call<bool>("transact", TRANSACTION_getSkuDetails, _data, _reply, 0);
								_reply.Call("readException");
								
								if (0 !=_reply.Call<int>("readInt")) {
									using(AndroidJavaClass klazz = new AndroidJavaClass("android.os.Bundle")) {
										AndroidJavaObject CREATOR = klazz.GetStatic<AndroidJavaObject>("CREATOR");
										_result = CREATOR.Call<AndroidJavaObject>("createFromParcel", _reply);
									}
								} else {
									_result = null;
								}
								
							} finally {
								_data.Call("recycle");
								_reply.Call("recycle");
							}
							
						} else {
							return JavaObject.Call<AndroidJavaObject>("getSkuDetails", apiVersion, packageName, type, skusBundle);
						}
						
						return _result;
					}
					
					public AndroidJavaObject GetPurchases(int apiVersion, string packageName, string type, string continuationToken) {
						AndroidJavaObject _result = null;
						
						if (UseProxy) {
							AndroidJavaObject _data = CreateParcel();
							AndroidJavaObject _reply = CreateParcel();
							
							try {
								_data.Call("writeInterfaceToken", Descriptor);
								_data.Call("writeInt", apiVersion);
								_data.Call("writeString", packageName);
								_data.Call("writeString", type);
								_data.Call("writeString", continuationToken);
								
								JavaObject.Call<bool>("transact", TRANSACTION_getPurchases, _data, _reply, 0);
								_reply.Call("readException");
								
								if (0 !=_reply.Call<int>("readInt")) {
									using(AndroidJavaClass klazz = new AndroidJavaClass("android.os.Bundle")) {
										AndroidJavaObject CREATOR = klazz.GetStatic<AndroidJavaObject>("CREATOR");
										_result = CREATOR.Call<AndroidJavaObject>("createFromParcel", _reply);
									}
								} else {
									_result = null;
								}
								
							} finally {
								_data.Call("recycle");
								_reply.Call("recycle");
							}
							
						} else {
							return JavaObject.Call<AndroidJavaObject>("getPurchases", apiVersion, packageName, type, continuationToken);
						}
						
						return _result;
					}
					
					public int ConsumePurchase(int apiVersion, string packageName, string purchaseToken) {
						int _result = 0;
						
						if (UseProxy) {
							AndroidJavaObject _data = CreateParcel();
							AndroidJavaObject _reply = CreateParcel();
							
							try {
								_data.Call("writeInterfaceToken", Descriptor);
								_data.Call("writeInt", apiVersion);
								_data.Call("writeString", packageName);
								_data.Call("writeString", purchaseToken);
								
								JavaObject.Call<bool>("transact", TRANSACTION_consumePurchase, _data, _reply, 0);
								_reply.Call("readException");
								
								_result = _reply.Call<int>("readInt");
								
							} finally {
								_data.Call("recycle");
								_reply.Call("recycle");
							}
							
						} else {
							return JavaObject.Call<int>("consumePurchase", apiVersion, packageName, purchaseToken);
						}
						
						return _result;
					}
					
				}

				#endregion

			}
		}
	}
}

